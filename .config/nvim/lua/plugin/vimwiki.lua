vim.cmd([[

let wiki_1 = {}
" let wiki_1.path = '~/vimwiki/'
let wiki_1.path = '/Users/juanedflores/Library/Mobile\ Documents/iCloud~md~obsidian/Documents/Zettelkasten'
" let wiki_1.path = '/Users/juanedflores/Downloads/'
let wiki_1.diary_rel_path = 'DailyDiary/'
let wiki_1.syntax = 'markdown'
let wiki_1.ext = '.md'

let wiki_2 = {}
let wiki_2.path = '/Users/juanedflores/Library/Mobile\ Documents/iCloud~md~obsidian/Documents/Zettelkasten'
let wiki_2.syntax = 'markdown'
let wiki_2.ext = '.md'
let wiki_2.index = '_Index_of_Zettelkasten'

let wiki_3 = {}
let wiki_3.path = '~/vimwiki/Progress_Projects/'

let wiki_4 = {}
let wiki_4.path = '~/vimwiki/German_Notes/'
let wiki_4.syntax = 'markdown'
let wiki_4.ext = '.md'

let g:vimwiki_list = [wiki_1, wiki_2, wiki_3, wiki_4]
" let g:vimwiki_list = [{'path': '/Users/juanedflores/Library/Mobile\ Documents/iCloud~md~obsidian/Documents/Zettelkasten', 'syntax': 'markdown', 'ext': '.md'}]
let g:vimwiki_map_prefix = '<leader>u'
let g:vimwiki_folding = 'expr'

augroup foldwiki
  autocmd!
  autocmd BufEnter *.md,*.wiki hi markdownH1 guifg=#8E8474
  autocmd BufEnter *.md,*.wiki hi markdownH2 guifg=#C2B02E
  autocmd BufEnter *.md,*.wiki hi markdownH3 guifg=#646C2F
  autocmd BufEnter *.md,*.wiki hi markdownH4 guifg=#8C5226
  autocmd BufEnter *.md,*.wiki hi markdownH5 guifg=#326B62
  autocmd BufEnter *.md,*.wiki hi markdownH6 guifg=#7DA182
  autocmd BufEnter *.md,*.wiki setlocal linebreak wrap
augroup END

augroup wikitest
  autocmd!
  autocmd BufNewFile *.md echom "test works"
augroup END

" Work with my autogenerated index files from Obsidian
function! VimwikiLinkHandler(link)
  echom(a:link)
  let link = a:link
  let l:cur_dir_tail = expand('%:t')

  if strpart(l:cur_dir_tail, 0, 10) == "_Index_of_"
    let link = "/" . link
    call vimwiki#base#open_link(':e', link)
    return 1
  elseif link =~# '^vfile:'
    let link = link[1:]
  else 
    return 0
  endif

  let link_infos = vimwiki#base#resolve_link(link)
  if link_infos.filename == ''
    echomsg 'Vimwiki Error: Unable to resolve link!'
    return 0
  else
    exe 'tabnew ' . fnameescape(link_infos.filename)
    return 1
  endif

endfunction
]])
